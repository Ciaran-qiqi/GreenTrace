// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class EurUsdPriceFetched extends ethereum.Event {
  get params(): EurUsdPriceFetched__Params {
    return new EurUsdPriceFetched__Params(this);
  }
}

export class EurUsdPriceFetched__Params {
  _event: EurUsdPriceFetched;

  constructor(event: EurUsdPriceFetched) {
    this._event = event;
  }

  get eurUsdPrice(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class FulfillRequestCompleted extends ethereum.Event {
  get params(): FulfillRequestCompleted__Params {
    return new FulfillRequestCompleted__Params(this);
  }
}

export class FulfillRequestCompleted__Params {
  _event: FulfillRequestCompleted;

  constructor(event: FulfillRequestCompleted) {
    this._event = event;
  }

  get requestId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class FulfillRequestStarted extends ethereum.Event {
  get params(): FulfillRequestStarted__Params {
    return new FulfillRequestStarted__Params(this);
  }
}

export class FulfillRequestStarted__Params {
  _event: FulfillRequestStarted;

  constructor(event: FulfillRequestStarted) {
    this._event = event;
  }

  get requestId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get responseLength(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get errorLength(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class FunctionsRequestSent extends ethereum.Event {
  get params(): FunctionsRequestSent__Params {
    return new FunctionsRequestSent__Params(this);
  }
}

export class FunctionsRequestSent__Params {
  _event: FunctionsRequestSent;

  constructor(event: FunctionsRequestSent) {
    this._event = event;
  }

  get requestId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get source(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class JavaScriptSourceBuilt extends ethereum.Event {
  get params(): JavaScriptSourceBuilt__Params {
    return new JavaScriptSourceBuilt__Params(this);
  }
}

export class JavaScriptSourceBuilt__Params {
  _event: JavaScriptSourceBuilt;

  constructor(event: JavaScriptSourceBuilt) {
    this._event = event;
  }

  get source(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class OperatorAdded extends ethereum.Event {
  get params(): OperatorAdded__Params {
    return new OperatorAdded__Params(this);
  }
}

export class OperatorAdded__Params {
  _event: OperatorAdded;

  constructor(event: OperatorAdded) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OperatorRemoved extends ethereum.Event {
  get params(): OperatorRemoved__Params {
    return new OperatorRemoved__Params(this);
  }
}

export class OperatorRemoved__Params {
  _event: OperatorRemoved;

  constructor(event: OperatorRemoved) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PriceCalculation extends ethereum.Event {
  get params(): PriceCalculation__Params {
    return new PriceCalculation__Params(this);
  }
}

export class PriceCalculation__Params {
  _event: PriceCalculation;

  constructor(event: PriceCalculation) {
    this._event = event;
  }

  get eurPrice(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get eurUsdRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get usdPrice(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class PriceUpdated extends ethereum.Event {
  get params(): PriceUpdated__Params {
    return new PriceUpdated__Params(this);
  }
}

export class PriceUpdated__Params {
  _event: PriceUpdated;

  constructor(event: PriceUpdated) {
    this._event = event;
  }

  get eurPrice(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get usdPrice(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RequestEncoded extends ethereum.Event {
  get params(): RequestEncoded__Params {
    return new RequestEncoded__Params(this);
  }
}

export class RequestEncoded__Params {
  _event: RequestEncoded;

  constructor(event: RequestEncoded) {
    this._event = event;
  }

  get encodedRequest(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class RequestFulfilled extends ethereum.Event {
  get params(): RequestFulfilled__Params {
    return new RequestFulfilled__Params(this);
  }
}

export class RequestFulfilled__Params {
  _event: RequestFulfilled;

  constructor(event: RequestFulfilled) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class RequestInitiated extends ethereum.Event {
  get params(): RequestInitiated__Params {
    return new RequestInitiated__Params(this);
  }
}

export class RequestInitiated__Params {
  _event: RequestInitiated;

  constructor(event: RequestInitiated) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get subscriptionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get gasLimit(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get donId(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class RequestObjectCreated extends ethereum.Event {
  get params(): RequestObjectCreated__Params {
    return new RequestObjectCreated__Params(this);
  }
}

export class RequestObjectCreated__Params {
  _event: RequestObjectCreated;

  constructor(event: RequestObjectCreated) {
    this._event = event;
  }
}

export class RequestProcessed extends ethereum.Event {
  get params(): RequestProcessed__Params {
    return new RequestProcessed__Params(this);
  }
}

export class RequestProcessed__Params {
  _event: RequestProcessed;

  constructor(event: RequestProcessed) {
    this._event = event;
  }

  get requestId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get success(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get errorMessage(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class RequestSent extends ethereum.Event {
  get params(): RequestSent__Params {
    return new RequestSent__Params(this);
  }
}

export class RequestSent__Params {
  _event: RequestSent;

  constructor(event: RequestSent) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class RequestSent1 extends ethereum.Event {
  get params(): RequestSent1__Params {
    return new RequestSent1__Params(this);
  }
}

export class RequestSent1__Params {
  _event: RequestSent1;

  constructor(event: RequestSent1) {
    this._event = event;
  }

  get requestId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get subscriptionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get gasLimit(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get donId(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class RequestValidationFailed extends ethereum.Event {
  get params(): RequestValidationFailed__Params {
    return new RequestValidationFailed__Params(this);
  }
}

export class RequestValidationFailed__Params {
  _event: RequestValidationFailed;

  constructor(event: RequestValidationFailed) {
    this._event = event;
  }

  get reason(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class ResponseDecoded extends ethereum.Event {
  get params(): ResponseDecoded__Params {
    return new ResponseDecoded__Params(this);
  }
}

export class ResponseDecoded__Params {
  _event: ResponseDecoded;

  constructor(event: ResponseDecoded) {
    this._event = event;
  }

  get priceEUR(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class UsdPriceCalculated extends ethereum.Event {
  get params(): UsdPriceCalculated__Params {
    return new UsdPriceCalculated__Params(this);
  }
}

export class UsdPriceCalculated__Params {
  _event: UsdPriceCalculated;

  constructor(event: UsdPriceCalculated) {
    this._event = event;
  }

  get usdPrice(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class CarbonPriceOracle extends ethereum.SmartContract {
  static bind(address: Address): CarbonPriceOracle {
    return new CarbonPriceOracle("CarbonPriceOracle", address);
  }

  authorizedOperators(param0: Address): boolean {
    let result = super.call(
      "authorizedOperators",
      "authorizedOperators(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_authorizedOperators(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "authorizedOperators",
      "authorizedOperators(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  carbonPriceEUR(): BigInt {
    let result = super.call("carbonPriceEUR", "carbonPriceEUR():(uint256)", []);

    return result[0].toBigInt();
  }

  try_carbonPriceEUR(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "carbonPriceEUR",
      "carbonPriceEUR():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  carbonPriceUSD(): BigInt {
    let result = super.call("carbonPriceUSD", "carbonPriceUSD():(uint256)", []);

    return result[0].toBigInt();
  }

  try_carbonPriceUSD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "carbonPriceUSD",
      "carbonPriceUSD():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  donId(): Bytes {
    let result = super.call("donId", "donId():(bytes32)", []);

    return result[0].toBytes();
  }

  try_donId(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("donId", "donId():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  eurUsdPriceFeed(): Address {
    let result = super.call(
      "eurUsdPriceFeed",
      "eurUsdPriceFeed():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_eurUsdPriceFeed(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "eurUsdPriceFeed",
      "eurUsdPriceFeed():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  gasLimit(): BigInt {
    let result = super.call("gasLimit", "gasLimit():(uint32)", []);

    return result[0].toBigInt();
  }

  try_gasLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("gasLimit", "gasLimit():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLatestCarbonPriceEUR(): BigInt {
    let result = super.call(
      "getLatestCarbonPriceEUR",
      "getLatestCarbonPriceEUR():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getLatestCarbonPriceEUR(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLatestCarbonPriceEUR",
      "getLatestCarbonPriceEUR():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLatestCarbonPriceUSD(): BigInt {
    let result = super.call(
      "getLatestCarbonPriceUSD",
      "getLatestCarbonPriceUSD():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getLatestCarbonPriceUSD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLatestCarbonPriceUSD",
      "getLatestCarbonPriceUSD():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  linkToken(): Address {
    let result = super.call("linkToken", "linkToken():(address)", []);

    return result[0].toAddress();
  }

  try_linkToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("linkToken", "linkToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  secretsLocation(): Bytes {
    let result = super.call(
      "secretsLocation",
      "secretsLocation():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_secretsLocation(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "secretsLocation",
      "secretsLocation():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  subscriptionId(): BigInt {
    let result = super.call("subscriptionId", "subscriptionId():(uint64)", []);

    return result[0].toBigInt();
  }

  try_subscriptionId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "subscriptionId",
      "subscriptionId():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get router(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _donId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _eurUsdPriceFeed(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _linkToken(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddOperatorCall extends ethereum.Call {
  get inputs(): AddOperatorCall__Inputs {
    return new AddOperatorCall__Inputs(this);
  }

  get outputs(): AddOperatorCall__Outputs {
    return new AddOperatorCall__Outputs(this);
  }
}

export class AddOperatorCall__Inputs {
  _call: AddOperatorCall;

  constructor(call: AddOperatorCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddOperatorCall__Outputs {
  _call: AddOperatorCall;

  constructor(call: AddOperatorCall) {
    this._call = call;
  }
}

export class HandleOracleFulfillmentCall extends ethereum.Call {
  get inputs(): HandleOracleFulfillmentCall__Inputs {
    return new HandleOracleFulfillmentCall__Inputs(this);
  }

  get outputs(): HandleOracleFulfillmentCall__Outputs {
    return new HandleOracleFulfillmentCall__Outputs(this);
  }
}

export class HandleOracleFulfillmentCall__Inputs {
  _call: HandleOracleFulfillmentCall;

  constructor(call: HandleOracleFulfillmentCall) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get response(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get err(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class HandleOracleFulfillmentCall__Outputs {
  _call: HandleOracleFulfillmentCall;

  constructor(call: HandleOracleFulfillmentCall) {
    this._call = call;
  }
}

export class RemoveOperatorCall extends ethereum.Call {
  get inputs(): RemoveOperatorCall__Inputs {
    return new RemoveOperatorCall__Inputs(this);
  }

  get outputs(): RemoveOperatorCall__Outputs {
    return new RemoveOperatorCall__Outputs(this);
  }
}

export class RemoveOperatorCall__Inputs {
  _call: RemoveOperatorCall;

  constructor(call: RemoveOperatorCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveOperatorCall__Outputs {
  _call: RemoveOperatorCall;

  constructor(call: RemoveOperatorCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RequestCarbonPriceCall extends ethereum.Call {
  get inputs(): RequestCarbonPriceCall__Inputs {
    return new RequestCarbonPriceCall__Inputs(this);
  }

  get outputs(): RequestCarbonPriceCall__Outputs {
    return new RequestCarbonPriceCall__Outputs(this);
  }
}

export class RequestCarbonPriceCall__Inputs {
  _call: RequestCarbonPriceCall;

  constructor(call: RequestCarbonPriceCall) {
    this._call = call;
  }
}

export class RequestCarbonPriceCall__Outputs {
  _call: RequestCarbonPriceCall;

  constructor(call: RequestCarbonPriceCall) {
    this._call = call;
  }
}

export class SetGasLimitCall extends ethereum.Call {
  get inputs(): SetGasLimitCall__Inputs {
    return new SetGasLimitCall__Inputs(this);
  }

  get outputs(): SetGasLimitCall__Outputs {
    return new SetGasLimitCall__Outputs(this);
  }
}

export class SetGasLimitCall__Inputs {
  _call: SetGasLimitCall;

  constructor(call: SetGasLimitCall) {
    this._call = call;
  }

  get _gasLimit(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetGasLimitCall__Outputs {
  _call: SetGasLimitCall;

  constructor(call: SetGasLimitCall) {
    this._call = call;
  }
}

export class SetSubscriptionIdCall extends ethereum.Call {
  get inputs(): SetSubscriptionIdCall__Inputs {
    return new SetSubscriptionIdCall__Inputs(this);
  }

  get outputs(): SetSubscriptionIdCall__Outputs {
    return new SetSubscriptionIdCall__Outputs(this);
  }
}

export class SetSubscriptionIdCall__Inputs {
  _call: SetSubscriptionIdCall;

  constructor(call: SetSubscriptionIdCall) {
    this._call = call;
  }

  get _subscriptionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetSubscriptionIdCall__Outputs {
  _call: SetSubscriptionIdCall;

  constructor(call: SetSubscriptionIdCall) {
    this._call = call;
  }
}

export class SetTestCarbonPriceEURCall extends ethereum.Call {
  get inputs(): SetTestCarbonPriceEURCall__Inputs {
    return new SetTestCarbonPriceEURCall__Inputs(this);
  }

  get outputs(): SetTestCarbonPriceEURCall__Outputs {
    return new SetTestCarbonPriceEURCall__Outputs(this);
  }
}

export class SetTestCarbonPriceEURCall__Inputs {
  _call: SetTestCarbonPriceEURCall;

  constructor(call: SetTestCarbonPriceEURCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetTestCarbonPriceEURCall__Outputs {
  _call: SetTestCarbonPriceEURCall;

  constructor(call: SetTestCarbonPriceEURCall) {
    this._call = call;
  }
}

export class SetTestCarbonPriceUSDCall extends ethereum.Call {
  get inputs(): SetTestCarbonPriceUSDCall__Inputs {
    return new SetTestCarbonPriceUSDCall__Inputs(this);
  }

  get outputs(): SetTestCarbonPriceUSDCall__Outputs {
    return new SetTestCarbonPriceUSDCall__Outputs(this);
  }
}

export class SetTestCarbonPriceUSDCall__Inputs {
  _call: SetTestCarbonPriceUSDCall;

  constructor(call: SetTestCarbonPriceUSDCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetTestCarbonPriceUSDCall__Outputs {
  _call: SetTestCarbonPriceUSDCall;

  constructor(call: SetTestCarbonPriceUSDCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawLinkCall extends ethereum.Call {
  get inputs(): WithdrawLinkCall__Inputs {
    return new WithdrawLinkCall__Inputs(this);
  }

  get outputs(): WithdrawLinkCall__Outputs {
    return new WithdrawLinkCall__Outputs(this);
  }
}

export class WithdrawLinkCall__Inputs {
  _call: WithdrawLinkCall;

  constructor(call: WithdrawLinkCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawLinkCall__Outputs {
  _call: WithdrawLinkCall;

  constructor(call: WithdrawLinkCall) {
    this._call = call;
  }
}

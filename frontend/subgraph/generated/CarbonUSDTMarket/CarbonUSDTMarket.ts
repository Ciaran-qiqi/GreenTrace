// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FeeCollectorUpdated extends ethereum.Event {
  get params(): FeeCollectorUpdated__Params {
    return new FeeCollectorUpdated__Params(this);
  }
}

export class FeeCollectorUpdated__Params {
  _event: FeeCollectorUpdated;

  constructor(event: FeeCollectorUpdated) {
    this._event = event;
  }

  get oldCollector(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newCollector(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FillOrderFeeRateUpdated extends ethereum.Event {
  get params(): FillOrderFeeRateUpdated__Params {
    return new FillOrderFeeRateUpdated__Params(this);
  }
}

export class FillOrderFeeRateUpdated__Params {
  _event: FillOrderFeeRateUpdated;

  constructor(event: FillOrderFeeRateUpdated) {
    this._event = event;
  }

  get oldRate(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class LimitOrderFeeRateUpdated extends ethereum.Event {
  get params(): LimitOrderFeeRateUpdated__Params {
    return new LimitOrderFeeRateUpdated__Params(this);
  }
}

export class LimitOrderFeeRateUpdated__Params {
  _event: LimitOrderFeeRateUpdated;

  constructor(event: LimitOrderFeeRateUpdated) {
    this._event = event;
  }

  get oldRate(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MarketOrderExecuted extends ethereum.Event {
  get params(): MarketOrderExecuted__Params {
    return new MarketOrderExecuted__Params(this);
  }
}

export class MarketOrderExecuted__Params {
  _event: MarketOrderExecuted;

  constructor(event: MarketOrderExecuted) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class OrderCancelled extends ethereum.Event {
  get params(): OrderCancelled__Params {
    return new OrderCancelled__Params(this);
  }
}

export class OrderCancelled__Params {
  _event: OrderCancelled;

  constructor(event: OrderCancelled) {
    this._event = event;
  }

  get orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OrderCreated extends ethereum.Event {
  get params(): OrderCreated__Params {
    return new OrderCreated__Params(this);
  }
}

export class OrderCreated__Params {
  _event: OrderCreated;

  constructor(event: OrderCreated) {
    this._event = event;
  }

  get orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get orderType(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class OrderFilled extends ethereum.Event {
  get params(): OrderFilled__Params {
    return new OrderFilled__Params(this);
  }
}

export class OrderFilled__Params {
  _event: OrderFilled;

  constructor(event: OrderFilled) {
    this._event = event;
  }

  get orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get platformFee(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PlatformFeeRateUpdated extends ethereum.Event {
  get params(): PlatformFeeRateUpdated__Params {
    return new PlatformFeeRateUpdated__Params(this);
  }
}

export class PlatformFeeRateUpdated__Params {
  _event: PlatformFeeRateUpdated;

  constructor(event: PlatformFeeRateUpdated) {
    this._event = event;
  }

  get oldRate(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CarbonUSDTMarket__getFeeRatesResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getPlatformFee(): BigInt {
    return this.value0;
  }

  getLimitOrderFee(): BigInt {
    return this.value1;
  }

  getFillOrderFee(): BigInt {
    return this.value2;
  }
}

export class CarbonUSDTMarket__getMarketOrderEstimateResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getEstimatedAmount(): BigInt {
    return this.value0;
  }

  getPlatformFee(): BigInt {
    return this.value1;
  }

  getTotalAmount(): BigInt {
    return this.value2;
  }
}

export class CarbonUSDTMarket__getMarketStatsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getTotalOrdersCreated(): BigInt {
    return this.value0;
  }

  getTotalOrdersFilled(): BigInt {
    return this.value1;
  }

  getTotalOrdersCancelled(): BigInt {
    return this.value2;
  }

  getTotalVolumeTraded(): BigInt {
    return this.value3;
  }

  getTotalFeesCollected(): BigInt {
    return this.value4;
  }

  getNextOrderId(): BigInt {
    return this.value5;
  }
}

export class CarbonUSDTMarket__getOrderResultValue0Struct extends ethereum.Tuple {
  get user(): Address {
    return this[0].toAddress();
  }

  get orderType(): i32 {
    return this[1].toI32();
  }

  get amount(): BigInt {
    return this[2].toBigInt();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get status(): i32 {
    return this[5].toI32();
  }

  get orderFee(): BigInt {
    return this[6].toBigInt();
  }
}

export class CarbonUSDTMarket__marketStatsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getTotalOrdersCreated(): BigInt {
    return this.value0;
  }

  getTotalOrdersFilled(): BigInt {
    return this.value1;
  }

  getTotalOrdersCancelled(): BigInt {
    return this.value2;
  }

  getTotalVolumeTraded(): BigInt {
    return this.value3;
  }

  getTotalFeesCollected(): BigInt {
    return this.value4;
  }

  getNextOrderId(): BigInt {
    return this.value5;
  }
}

export class CarbonUSDTMarket__ordersResult {
  value0: Address;
  value1: i32;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: i32;
  value6: BigInt;

  constructor(
    value0: Address,
    value1: i32,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: i32,
    value6: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set(
      "value5",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value5))
    );
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    return map;
  }

  getUser(): Address {
    return this.value0;
  }

  getOrderType(): i32 {
    return this.value1;
  }

  getAmount(): BigInt {
    return this.value2;
  }

  getPrice(): BigInt {
    return this.value3;
  }

  getTimestamp(): BigInt {
    return this.value4;
  }

  getStatus(): i32 {
    return this.value5;
  }

  getOrderFee(): BigInt {
    return this.value6;
  }
}

export class CarbonUSDTMarket extends ethereum.SmartContract {
  static bind(address: Address): CarbonUSDTMarket {
    return new CarbonUSDTMarket("CarbonUSDTMarket", address);
  }

  ammPool(): Address {
    let result = super.call("ammPool", "ammPool():(address)", []);

    return result[0].toAddress();
  }

  try_ammPool(): ethereum.CallResult<Address> {
    let result = super.tryCall("ammPool", "ammPool():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  carbonToken(): Address {
    let result = super.call("carbonToken", "carbonToken():(address)", []);

    return result[0].toAddress();
  }

  try_carbonToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("carbonToken", "carbonToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createBuyOrder(_amount: BigInt, _price: BigInt): BigInt {
    let result = super.call(
      "createBuyOrder",
      "createBuyOrder(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromUnsignedBigInt(_price)
      ]
    );

    return result[0].toBigInt();
  }

  try_createBuyOrder(
    _amount: BigInt,
    _price: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createBuyOrder",
      "createBuyOrder(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromUnsignedBigInt(_price)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createSellOrder(_amount: BigInt, _price: BigInt): BigInt {
    let result = super.call(
      "createSellOrder",
      "createSellOrder(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromUnsignedBigInt(_price)
      ]
    );

    return result[0].toBigInt();
  }

  try_createSellOrder(
    _amount: BigInt,
    _price: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createSellOrder",
      "createSellOrder(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromUnsignedBigInt(_price)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  feeCollector(): Address {
    let result = super.call("feeCollector", "feeCollector():(address)", []);

    return result[0].toAddress();
  }

  try_feeCollector(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeCollector", "feeCollector():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  fillOrderFeeRate(): BigInt {
    let result = super.call(
      "fillOrderFeeRate",
      "fillOrderFeeRate():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_fillOrderFeeRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "fillOrderFeeRate",
      "fillOrderFeeRate():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFeeRates(): CarbonUSDTMarket__getFeeRatesResult {
    let result = super.call(
      "getFeeRates",
      "getFeeRates():(uint256,uint256,uint256)",
      []
    );

    return new CarbonUSDTMarket__getFeeRatesResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_getFeeRates(): ethereum.CallResult<CarbonUSDTMarket__getFeeRatesResult> {
    let result = super.tryCall(
      "getFeeRates",
      "getFeeRates():(uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CarbonUSDTMarket__getFeeRatesResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  getMarketOrderEstimate(
    _amount: BigInt,
    _isBuy: boolean
  ): CarbonUSDTMarket__getMarketOrderEstimateResult {
    let result = super.call(
      "getMarketOrderEstimate",
      "getMarketOrderEstimate(uint256,bool):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromBoolean(_isBuy)
      ]
    );

    return new CarbonUSDTMarket__getMarketOrderEstimateResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_getMarketOrderEstimate(
    _amount: BigInt,
    _isBuy: boolean
  ): ethereum.CallResult<CarbonUSDTMarket__getMarketOrderEstimateResult> {
    let result = super.tryCall(
      "getMarketOrderEstimate",
      "getMarketOrderEstimate(uint256,bool):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromBoolean(_isBuy)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CarbonUSDTMarket__getMarketOrderEstimateResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  getMarketStats(): CarbonUSDTMarket__getMarketStatsResult {
    let result = super.call(
      "getMarketStats",
      "getMarketStats():(uint256,uint256,uint256,uint256,uint256,uint256)",
      []
    );

    return new CarbonUSDTMarket__getMarketStatsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_getMarketStats(): ethereum.CallResult<
    CarbonUSDTMarket__getMarketStatsResult
  > {
    let result = super.tryCall(
      "getMarketStats",
      "getMarketStats():(uint256,uint256,uint256,uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CarbonUSDTMarket__getMarketStatsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }

  getOrder(_orderId: BigInt): CarbonUSDTMarket__getOrderResultValue0Struct {
    let result = super.call(
      "getOrder",
      "getOrder(uint256):((address,uint8,uint256,uint256,uint256,uint8,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );

    return changetype<CarbonUSDTMarket__getOrderResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getOrder(
    _orderId: BigInt
  ): ethereum.CallResult<CarbonUSDTMarket__getOrderResultValue0Struct> {
    let result = super.tryCall(
      "getOrder",
      "getOrder(uint256):((address,uint8,uint256,uint256,uint256,uint8,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<CarbonUSDTMarket__getOrderResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  limitOrderFeeRate(): BigInt {
    let result = super.call(
      "limitOrderFeeRate",
      "limitOrderFeeRate():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_limitOrderFeeRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "limitOrderFeeRate",
      "limitOrderFeeRate():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  limitOrderPriceDeviationMultiplier(): BigInt {
    let result = super.call(
      "limitOrderPriceDeviationMultiplier",
      "limitOrderPriceDeviationMultiplier():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_limitOrderPriceDeviationMultiplier(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "limitOrderPriceDeviationMultiplier",
      "limitOrderPriceDeviationMultiplier():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  marketBuy(_amount: BigInt): BigInt {
    let result = super.call("marketBuy", "marketBuy(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);

    return result[0].toBigInt();
  }

  try_marketBuy(_amount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("marketBuy", "marketBuy(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  marketSell(_amount: BigInt): BigInt {
    let result = super.call("marketSell", "marketSell(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);

    return result[0].toBigInt();
  }

  try_marketSell(_amount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("marketSell", "marketSell(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  marketStats(): CarbonUSDTMarket__marketStatsResult {
    let result = super.call(
      "marketStats",
      "marketStats():(uint256,uint256,uint256,uint256,uint256,uint256)",
      []
    );

    return new CarbonUSDTMarket__marketStatsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_marketStats(): ethereum.CallResult<CarbonUSDTMarket__marketStatsResult> {
    let result = super.tryCall(
      "marketStats",
      "marketStats():(uint256,uint256,uint256,uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CarbonUSDTMarket__marketStatsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }

  maxLimitOrderDeviation(): BigInt {
    let result = super.call(
      "maxLimitOrderDeviation",
      "maxLimitOrderDeviation():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maxLimitOrderDeviation(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxLimitOrderDeviation",
      "maxLimitOrderDeviation():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  orders(param0: BigInt): CarbonUSDTMarket__ordersResult {
    let result = super.call(
      "orders",
      "orders(uint256):(address,uint8,uint256,uint256,uint256,uint8,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new CarbonUSDTMarket__ordersResult(
      result[0].toAddress(),
      result[1].toI32(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toI32(),
      result[6].toBigInt()
    );
  }

  try_orders(
    param0: BigInt
  ): ethereum.CallResult<CarbonUSDTMarket__ordersResult> {
    let result = super.tryCall(
      "orders",
      "orders(uint256):(address,uint8,uint256,uint256,uint256,uint8,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CarbonUSDTMarket__ordersResult(
        value[0].toAddress(),
        value[1].toI32(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toI32(),
        value[6].toBigInt()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  platformFeeRate(): BigInt {
    let result = super.call(
      "platformFeeRate",
      "platformFeeRate():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_platformFeeRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "platformFeeRate",
      "platformFeeRate():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  usdtToken(): Address {
    let result = super.call("usdtToken", "usdtToken():(address)", []);

    return result[0].toAddress();
  }

  try_usdtToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("usdtToken", "usdtToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _carbonToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _usdtToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _ammPool(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _platformFeeRate(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _limitOrderFeeRate(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _fillOrderFeeRate(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _feeCollector(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelOrderCall extends ethereum.Call {
  get inputs(): CancelOrderCall__Inputs {
    return new CancelOrderCall__Inputs(this);
  }

  get outputs(): CancelOrderCall__Outputs {
    return new CancelOrderCall__Outputs(this);
  }
}

export class CancelOrderCall__Inputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }

  get _orderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelOrderCall__Outputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }
}

export class CreateBuyOrderCall extends ethereum.Call {
  get inputs(): CreateBuyOrderCall__Inputs {
    return new CreateBuyOrderCall__Inputs(this);
  }

  get outputs(): CreateBuyOrderCall__Outputs {
    return new CreateBuyOrderCall__Outputs(this);
  }
}

export class CreateBuyOrderCall__Inputs {
  _call: CreateBuyOrderCall;

  constructor(call: CreateBuyOrderCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreateBuyOrderCall__Outputs {
  _call: CreateBuyOrderCall;

  constructor(call: CreateBuyOrderCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateSellOrderCall extends ethereum.Call {
  get inputs(): CreateSellOrderCall__Inputs {
    return new CreateSellOrderCall__Inputs(this);
  }

  get outputs(): CreateSellOrderCall__Outputs {
    return new CreateSellOrderCall__Outputs(this);
  }
}

export class CreateSellOrderCall__Inputs {
  _call: CreateSellOrderCall;

  constructor(call: CreateSellOrderCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreateSellOrderCall__Outputs {
  _call: CreateSellOrderCall;

  constructor(call: CreateSellOrderCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class FillOrderCall extends ethereum.Call {
  get inputs(): FillOrderCall__Inputs {
    return new FillOrderCall__Inputs(this);
  }

  get outputs(): FillOrderCall__Outputs {
    return new FillOrderCall__Outputs(this);
  }
}

export class FillOrderCall__Inputs {
  _call: FillOrderCall;

  constructor(call: FillOrderCall) {
    this._call = call;
  }

  get _orderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FillOrderCall__Outputs {
  _call: FillOrderCall;

  constructor(call: FillOrderCall) {
    this._call = call;
  }
}

export class MarketBuyCall extends ethereum.Call {
  get inputs(): MarketBuyCall__Inputs {
    return new MarketBuyCall__Inputs(this);
  }

  get outputs(): MarketBuyCall__Outputs {
    return new MarketBuyCall__Outputs(this);
  }
}

export class MarketBuyCall__Inputs {
  _call: MarketBuyCall;

  constructor(call: MarketBuyCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MarketBuyCall__Outputs {
  _call: MarketBuyCall;

  constructor(call: MarketBuyCall) {
    this._call = call;
  }

  get usdtSpent(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class MarketSellCall extends ethereum.Call {
  get inputs(): MarketSellCall__Inputs {
    return new MarketSellCall__Inputs(this);
  }

  get outputs(): MarketSellCall__Outputs {
    return new MarketSellCall__Outputs(this);
  }
}

export class MarketSellCall__Inputs {
  _call: MarketSellCall;

  constructor(call: MarketSellCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MarketSellCall__Outputs {
  _call: MarketSellCall;

  constructor(call: MarketSellCall) {
    this._call = call;
  }

  get usdtReceived(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetPausedCall extends ethereum.Call {
  get inputs(): SetPausedCall__Inputs {
    return new SetPausedCall__Inputs(this);
  }

  get outputs(): SetPausedCall__Outputs {
    return new SetPausedCall__Outputs(this);
  }
}

export class SetPausedCall__Inputs {
  _call: SetPausedCall;

  constructor(call: SetPausedCall) {
    this._call = call;
  }

  get _paused(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetPausedCall__Outputs {
  _call: SetPausedCall;

  constructor(call: SetPausedCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateFeeCollectorCall extends ethereum.Call {
  get inputs(): UpdateFeeCollectorCall__Inputs {
    return new UpdateFeeCollectorCall__Inputs(this);
  }

  get outputs(): UpdateFeeCollectorCall__Outputs {
    return new UpdateFeeCollectorCall__Outputs(this);
  }
}

export class UpdateFeeCollectorCall__Inputs {
  _call: UpdateFeeCollectorCall;

  constructor(call: UpdateFeeCollectorCall) {
    this._call = call;
  }

  get _newCollector(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateFeeCollectorCall__Outputs {
  _call: UpdateFeeCollectorCall;

  constructor(call: UpdateFeeCollectorCall) {
    this._call = call;
  }
}

export class UpdateFillOrderFeeRateCall extends ethereum.Call {
  get inputs(): UpdateFillOrderFeeRateCall__Inputs {
    return new UpdateFillOrderFeeRateCall__Inputs(this);
  }

  get outputs(): UpdateFillOrderFeeRateCall__Outputs {
    return new UpdateFillOrderFeeRateCall__Outputs(this);
  }
}

export class UpdateFillOrderFeeRateCall__Inputs {
  _call: UpdateFillOrderFeeRateCall;

  constructor(call: UpdateFillOrderFeeRateCall) {
    this._call = call;
  }

  get _newRate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateFillOrderFeeRateCall__Outputs {
  _call: UpdateFillOrderFeeRateCall;

  constructor(call: UpdateFillOrderFeeRateCall) {
    this._call = call;
  }
}

export class UpdateLimitOrderFeeRateCall extends ethereum.Call {
  get inputs(): UpdateLimitOrderFeeRateCall__Inputs {
    return new UpdateLimitOrderFeeRateCall__Inputs(this);
  }

  get outputs(): UpdateLimitOrderFeeRateCall__Outputs {
    return new UpdateLimitOrderFeeRateCall__Outputs(this);
  }
}

export class UpdateLimitOrderFeeRateCall__Inputs {
  _call: UpdateLimitOrderFeeRateCall;

  constructor(call: UpdateLimitOrderFeeRateCall) {
    this._call = call;
  }

  get _newRate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateLimitOrderFeeRateCall__Outputs {
  _call: UpdateLimitOrderFeeRateCall;

  constructor(call: UpdateLimitOrderFeeRateCall) {
    this._call = call;
  }
}

export class UpdatePlatformFeeRateCall extends ethereum.Call {
  get inputs(): UpdatePlatformFeeRateCall__Inputs {
    return new UpdatePlatformFeeRateCall__Inputs(this);
  }

  get outputs(): UpdatePlatformFeeRateCall__Outputs {
    return new UpdatePlatformFeeRateCall__Outputs(this);
  }
}

export class UpdatePlatformFeeRateCall__Inputs {
  _call: UpdatePlatformFeeRateCall;

  constructor(call: UpdatePlatformFeeRateCall) {
    this._call = call;
  }

  get _newRate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdatePlatformFeeRateCall__Outputs {
  _call: UpdatePlatformFeeRateCall;

  constructor(call: UpdatePlatformFeeRateCall) {
    this._call = call;
  }
}
